// src/components/AutoLoanCalculator.js
import React, { useState } from 'react';
import './MortgageCalculator.css'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Å—Ç–∏–ª–∏
import axios from 'axios';

const AutoLoanCalculator = () => {
  const [carPrice, setCarPrice] = useState('');
  const [initialPayment, setInitialPayment] = useState('');
  const [years, setYears] = useState('');
  const [email, setEmail] = useState('');
  const [result, setResult] = useState(null);
  const [sent, setSent] = useState(false);

  const handleCalculate = () => {
    const loanAmount = carPrice - initialPayment;
    const annualRate = 3.5;
    const monthlyRate = annualRate / 12 / 100;
    const totalMonths = years * 12;
    const compoundRate = Math.pow(1 + monthlyRate, totalMonths);

    const monthlyPayment = loanAmount * monthlyRate * compoundRate / (compoundRate - 1);
    const totalCost = monthlyPayment * totalMonths;
    const requiredIncome = monthlyPayment * 2.5;

    setResult({
      monthlyPayment: monthlyPayment.toFixed(2),
      totalCost: totalCost.toFixed(2),
      requiredIncome: requiredIncome.toFixed(2),
      loanAmount: loanAmount.toFixed(2)
    });

    setSent(false);
  };

  const handleSendEmail = async () => {
    try {
      await axios.post('http://localhost:5000/api/send', {
        email,
        data: result
      });
      setSent(true);
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ' + error.message);
    }
  };

  return (
    <div className="calculator-container">
      <h2>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç–∞</h2>

      <div className="form-group">
        <label>–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è (‚ÇΩ)</label>
        <input
          type="number"
          value={carPrice}
          onChange={e => setCarPrice(+e.target.value)}
        />
      </div>

      <div className="form-group">
        <label>–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (‚ÇΩ)</label>
        <input
          type="number"
          value={initialPayment}
          onChange={e => setInitialPayment(+e.target.value)}
        />
      </div>

      <div className="form-group">
        <label>–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–ª–µ—Ç)</label>
        <input
          type="number"
          value={years}
          onChange={e => setYears(+e.target.value)}
        />
      </div>

      <div className="form-group">
        <label>–í–∞—à e-mail</label>
        <input
          type="email"
          placeholder="example@mail.ru"
          value={email}
          onChange={e => setEmail(e.target.value)}
        />
      </div>

      <button onClick={handleCalculate}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>

      {result && (
        <>
          <div className="result">
            <p>üöò –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: <strong>{result.loanAmount} ‚ÇΩ</strong></p>
            <p>üìÖ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: <strong>{result.monthlyPayment} ‚ÇΩ</strong></p>
            <p>üìà –û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç: <strong>{result.totalCost} ‚ÇΩ</strong></p>
            <p>üë®‚Äçüë©‚Äçüëß –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–æ—Ö–æ–¥: <strong>{result.requiredIncome} ‚ÇΩ</strong></p>
          </div>

          <button onClick={handleSendEmail}>
            üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ e-mail
          </button>

          {sent && (
            <p style={{ color: 'green', marginTop: '10px' }}>
              ‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {email}
            </p>
          )}
        </>
      )}
    </div>
  );
};

export default AutoLoanCalculator;
